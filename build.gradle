plugins {
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
    id 'io.freefair.lombok' version '8.4'
}

group = 'com.dfn'
version = '1.0.0'
sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

repositories {
    mavenCentral()
    // Add JasperReports repository
    maven { url "https://jaspersoft.jfrog.io/artifactory/third-party-releases/" }
    maven { url "https://jaspersoft.jfrog.io/artifactory/jr-ce-releases/" }
}

dependencies {
    // Spring Boot core dependencies
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    
    // JMS dependencies for JBoss integration
    implementation 'org.springframework:spring-jms:6.1.4'
    implementation 'jakarta.jms:jakarta.jms-api:3.1.0'
    implementation 'org.apache.activemq:artemis-jakarta-client:2.28.0'
    // Try using javax.jms for older version compatibility
    implementation 'javax.jms:javax.jms-api:2.0.1'
    // Add WildFly client for JBoss JNDI
    implementation 'org.wildfly:wildfly-client-all:27.0.1.Final'

    //these dependencies added because of wildfly client issue
    //if wildfly-client-all dependency used, pls comment these 2 dependencies
//    implementation 'org.wildfly:wildfly-naming-client:2.0.1.Final'
//    implementation 'org.jboss.xnio:xnio-nio:3.8.9.Final'
    
    // Oracle JDBC Driver
    implementation 'com.oracle.database.jdbc:ojdbc11:23.3.0.23.09'
    
    // JSON Processing - maintain compatibility with existing GSON usage
    implementation 'com.google.code.gson:gson:2.10.1'
    
    // Jakarta EE compatibility with Java 21
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.1'
    
    // Connection Pooling
    implementation 'org.apache.commons:commons-dbcp2:2.9.0'
    
    // Logging
    implementation 'org.apache.logging.log4j:log4j-api:2.17.2'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.2'
    
    // JasperReports for reporting functionality
    implementation('net.sf.jasperreports:jasperreports:5.5.1') {
        exclude group: 'com.lowagie', module: 'itext'
    }
    
    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    
    // Testing dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.1'
    testImplementation 'org.mockito:mockito-core:5.7.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.7.0'
    testImplementation 'com.h2database:h2:2.2.224' // For in-memory testing
    testImplementation 'org.assertj:assertj-core:3.24.2'
}

test {
    useJUnitPlatform()
}

// Enable Java 21 preview features
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += '--enable-preview'
    options.annotationProcessorGeneratedSourcesDirectory = file("${buildDir}/generated/sources/annotationProcessor/java/main")
}

tasks.withType(Test).configureEach {
    jvmArgs += '--enable-preview'
}

tasks.withType(JavaExec).configureEach {
    jvmArgs += '--enable-preview'
}