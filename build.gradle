plugins {
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'java'
    id 'io.freefair.lombok' version '8.6'
}

group = 'com.dfn'
version = '1.0.0'
sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

repositories {
    mavenCentral()
    // Add JasperReports repository
    maven { url "https://jaspersoft.jfrog.io/artifactory/third-party-releases/" }
    maven { url "https://jaspersoft.jfrog.io/artifactory/jr-ce-releases/" }
}

configurations.all {
    exclude group: 'org.slf4j', module: 'slf4j-simple'
    exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    exclude group: 'org.slf4j', module: 'slf4j-jdk14'
    exclude group: 'org.slf4j', module: 'slf4j-nop'
    exclude group: 'org.slf4j', module: 'jcl-over-slf4j'
    exclude group: 'org.slf4j', module: 'log4j-over-slf4j'
    exclude group: 'org.slf4j', module: 'jul-to-slf4j'
}

dependencies {
    // Spring Boot core dependencies
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation('org.springframework.boot:spring-boot-starter-jdbc')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-validation')
    implementation('org.springframework.boot:spring-boot-starter-webflux')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    
    // JMS dependencies using ActiveMQ instead of JBoss
    implementation 'org.springframework.boot:spring-boot-starter-activemq'
    
    // Oracle JDBC Driver
    implementation 'com.oracle.database.jdbc:ojdbc11:23.3.0.23.09'
    implementation 'com.oracle.database.nls:orai18n:23.3.0.23.09'
    
    // JSON Processing - maintain compatibility with existing GSON usage
    implementation 'com.google.code.gson:gson:2.10.1'
    
    // Jakarta EE compatibility with Java 21
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.1'
    
    // Connection Pooling
    implementation 'org.apache.commons:commons-dbcp2:2.9.0'
    
    // Logging dependencies
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'ch.qos.logback:logback-classic:1.4.11'
    
    // JasperReports for reporting functionality
    implementation('net.sf.jasperreports:jasperreports:5.5.1') {
        exclude group: 'com.lowagie', module: 'itext'
    }
    
    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    
    // Testing dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.10.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.10.1'
    testImplementation 'org.mockito:mockito-core:5.7.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.7.0'
    testImplementation 'com.h2database:h2:2.2.224' // For in-memory testing
    testImplementation 'org.assertj:assertj-core:3.24.2'
}

test {
    useJUnitPlatform()
}

// Enable Java 21 preview features
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += '--enable-preview'
    options.annotationProcessorGeneratedSourcesDirectory = file("${buildDir}/generated/sources/annotationProcessor/java/main")
}

tasks.withType(Test).configureEach {
    jvmArgs += '--enable-preview'
}

tasks.withType(JavaExec).configureEach {
    jvmArgs += '--enable-preview'
}